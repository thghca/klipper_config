[virtual_pins]

[output_pin test]
pin: virtual_pin:test
pwm: true

[gcode_macro _FAN_OVERRIDE]
description:
variable_lerp_max = 255
variable_lerp_min = 0
gcode:
    {% if 'MAX' in params %}
        {% set lerp_max = params.MAX|default(1.0)|float %}
        SET_GCODE_VARIABLE MACRO=_FAN_OVERRIDE VARIABLE=lerp_max VALUE={lerp_max}
        RESPOND MSG="Fan override: max = {lerp_max}"
    {% endif %}

[gcode_macro M1066]
description:
#rename_existing: M106.1
gcode:
    #lerp (1 - t) * v0 + t * v1;
    {% set requested = params.S|default(255)|float %}
    {% set lerp_max = printer["gcode_macro FAN_OVERRIDE"].lerp_max|float %}
    {% set lerp_min = printer["gcode_macro FAN_OVERRIDE"].lerp_min|float %}
    {% set lerped = (1 - requested/255) * lerp_min + requested/255 * lerp_max %}

    M118 lerped: {lerped}
    M106 S{lerped}

[gcode_macro _tmp_MOVE_XY]
description: Move toolhead in absolute machine coordinates within XY plane (TO="X,Y")
gcode:
    #current position
    {% set last = printer.gcode_move.position%}

    {% set speed = params.SPEED|default(60*60)|float %}

    {% if 'TO' in params %}
        {% set to = params.TO.split(',')|map('float')|list %}
        
        _GPUSH

        SET_GCODE_OFFSET X=0 Y=0        #Clear offsets
        G92 X{last.x} Y{last.y}         #Reset origin
        G90                             #Absolute coordinates

        G0 X{to[0]} Y{to[1]} F{speed}

        _GPOP
    {% endif %}

    {% if 'BY' in params %}
    ...
    {% endif %}

[gcode_macro _PARK_CENTER_BACK]
description:
gcode:
    {% set X_MAX = printer.toolhead.axis_maximum.x|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|float %}

    {% set x = X_MAX / 2 %}
    {% set y = Y_MAX %}

    MOVE_XY TO="{x},{y}"

[gcode_macro _PARK_CENTER_CENTER]
description:
gcode:
    {% set X_MAX = printer.toolhead.axis_maximum.x|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|float %}

    {% set x = X_MAX / 2 %}
    {% set y = Y_MAX / 2 %}

    MOVE_XY TO="{x},{y}"



[gcode_macro _template]
description: text
gcode:
    {% if 'PARAM' in params %}
        G1
    {% endif %}
    #SET_GCODE_VARIABLE MACRO= VARIABLE= VALUE={}
    #M140 S{printer["gcode_macro start_probe"].bed_temp}
    #printer['output_pin test'].value
    #{% set var = params.VAR|default(0)|int %}