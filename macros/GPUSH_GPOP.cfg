# stack-like gcode state

[gcode_macro _GPUSH]
description: Put gcode state on top of stack. _GPOP must be called after.
variable_head: 0
gcode:		
	{% set next = printer["gcode_macro _GPUSH"].head|int + 1 %}
	SAVE_GCODE_STATE NAME={"STACK" ~ next}
	SET_GCODE_VARIABLE MACRO=_GPUSH VARIABLE=head VALUE={next}
#	RESPOND MSG="{"push: " ~ next}"


[gcode_macro _GPOP]
description: Get gcode state from top of stack. _GPUSH must be called before.
gcode:
	{% set head  = printer["gcode_macro _GPUSH"].head|int %}
	RESTORE_GCODE_STATE NAME={"STACK" ~ head ~ " " ~ rawparams }
	SET_GCODE_VARIABLE MACRO=_GPUSH VARIABLE=head VALUE={head - 1}
#	RESPOND MSG="{"pop: " ~ (head)}"

[gcode_macro _GCLEAR]
description: Cleans gcode state stack.
gcode:
	SET_GCODE_VARIABLE MACRO=_GPUSH VARIABLE=head VALUE={0}
#	RESPOND MSG="{"clean: " ~ (head)}"