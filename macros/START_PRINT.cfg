[output_pin START_PRINT_BED_MESH]
pin: virtual_pin:START_PRINT_BED_MESH_pin
value: 1

[gcode_macro START_PRINT]
description: Print start script for slicer
gcode:
    
    {% if not (params.B_TEMP and params.E_TEMP)%}
        action_raise_error("Extruder temperature and bed temperature must be set")
    {% endif %}

    #Get Bed and Extruder temperature from Slicer GCode
    {% set B_TEMP = params.B_TEMP|default(0)|float %}	
    {% set E_TEMP = params.E_TEMP|default(0)|float %}
    {% set E_WAIT = E_TEMP - 50 %}

    {% set MINX = params.MINX|default(0)|float %}
    {% set MAXX = params.MAXX|default(0)|float %}
    {% set MINY = params.MINY|default(0)|float %}
    {% set MAXY = params.MAXY|default(0)|float %}

    {% set filament_sensor = printer["filament_switch_sensor filament_sensor"] %}
    {% if filament_sensor.enabled and not filament_sensor.filament_detected %}

    M117 No filament!
    CANCEL_PRINT
    
    {% else %}

    _START_PRINT_PREPARE

    M400			#wait for current moves to finish
    M117 Heating bed...
    _SOUND_BEEP

    M190 S{B_TEMP}	;wait for bed temperature
    
    M400			#wait for current moves to finish
    M117 Homing...
    _SOUND_BEEP

    _HOME_ALL

    {% if printer['output_pin START_PRINT_BED_MESH'].value == 1 %}
        M400		#wait for current moves to finish
        M117 Probing...
        _SOUND_BEEP
        BED_MESH_CALIBRATE ADAPTIVE=1
    {% endif %}

    M400			#wait for current moves to finish
    M117 Parking...
    _SOUND_BEEP

    _SAFE_Z_UP MIN=10
    _PARK_LEFT_FRONT

    M400			#wait for current moves to finish
    M117 Heating hotend...
    _SOUND_BEEP

    M109 S{E_TEMP} ;wait for hotend temperature

    M400			#wait for current moves to finish
    M117 Wiping...
    _SOUND_BEEP

    _WIPE_LINE3

    M400			#wait for current moves to finish
    M117 Parking...
    _SOUND_BEEP
    
    _PARK_LEFT_FRONT
    
    M400			#wait for current moves to finish
    M117 Starting print...
    _SOUND_BEEP

    G0 F{100*60}
    {% endif %}

[gcode_macro _START_PRINT_PREPARE]
description: Clean printer state before print
gcode:
    CLEAR_PAUSE		;clean pause state
    BED_MESH_CLEAR	;mesh somehow interfere with homing and probing
    G90		;absolute positionning
    G92 E0	;reset Extruder

[gcode_macro _HOME_ALL]
description: Home all axis
gcode:
    G28 X Y             #home XY
    {% if "stable_z_home" in printer%}
        STABLE_Z_HOME   #home Z
    {% else %}
        G28 Z0          #home Z
    {% endif %}

[gcode_macro _WIPE_LINE2]
description: Purge nozzle before print
variable_x_start = 0.0
variable_y_start =  0.0
variable_z_start =  2.0
variable_line0_length =  40.0
variable_line1_length = 100.0
variable_line2_length =  80.0
variable_line_width = 0.5
variable_line_height = 0.3
gcode:
    {% set line_width = line_width|float %}
    {% set line_height = line_height|float %}

    #extrusion calculation
    {% set fil_diam = printer.extruder.filament_diameter|default(1.75)|float %}
    {% set fil_sect = 3.1415 * ( fil_diam / 2.0)**2 %}  # mm^2 (mm^3 of filament per 1 mm of extrusion)
    {% set line_sect = line_width * line_height %}      # mm^2 (mm^3 of filament per 1 mm of line)
    {% set line_e_ratio = line_sect / fil_sect %}       # mm of extrusion per 1 mm of line

    {% set speed_line = 30*60|float %}
    {% set speed_move = 80*60|float %}

    {% set x_start = x_start|float %}
    {% set y_start = y_start|float %}
    {% set z_start = z_start|float %}
    
    #line0
    {% set line0_length = line0_length|float %}
    {% set line0_e = line0_length * line_e_ratio %}     # mm of filameent for line0
    #line1
    {% set line1_length = line1_length|float %}
    {% set line1_e = line1_length * line_e_ratio %}     # mm of filameent for line1
    #line2
    {% set line2_length = line2_length|float %}
    {% set line2_e = line2_length * line_e_ratio %}     # mm of filameent for line2

    # key points
    {% set p_prestart = 'X' ~ (x_start) ~               "Y" ~ (y_start) ~                                                   "Z" ~ (z_start) %}
    {% set p_line0_st = 'X' ~ (x_start) ~               "Y" ~ (y_start) ~                                                   "Z" ~ (z_start) %}
    {% set p_line0_en = 'X' ~ (x_start) ~               "Y" ~ (y_start + line0_length) ~                                    "Z" ~ (line_height) %}
    {% set p_line1_st = 'X' ~ (x_start) ~               "Y" ~ (y_start + line0_length) ~                                    "Z" ~ (line_height) %}
    {% set p_line1_en = 'X' ~ (x_start) ~               "Y" ~ (y_start + line0_length + line1_length) ~                     "Z" ~ (line_height) %}
    {% set p_line2_st = 'X' ~ (x_start + line_width) ~  "Y" ~ (y_start + line0_length + line1_length) ~                     "Z" ~ (line_height) %}
    {% set p_line2_en = 'X' ~ (x_start + line_width) ~  "Y" ~ (y_start + line0_length + line1_length - line2_length) ~      "Z" ~ (line_height) %}

    {% if printer.toolhead.homed_axes != "xyz" %}
        {action_respond_info("Please home XYZ first")}
    {% elif printer.extruder.can_extrude != True %}
        {action_respond_info("Extruder temperature too low")}
    {% else %}
        _GPUSH
        G90                                             # Absolute positionning
        M83                                             # Relative extrusion

        G1 {p_prestart} F{speed_move}                   # Move to prestart position

        G1 {p_line0_st} F{speed_move}                   # Move to line0 start position
        G1 {p_line0_en} F{speed_move} E{line1_e}        # Draw the zero line

        G1 {p_line1_st} F{speed_move}                   # Move to line1 start position
        G1 {p_line1_en} F{speed_line} E{line1_e}        # Draw the first line
        
        G1 {p_line2_st} F{speed_move}                   # Move to line2 start position
        G1 {p_line2_en} F{speed_line} E{line2_e}        # Draw the second line

        G1 E-1 F{20*60}                                 #retract
        _GPOP
    {% endif %}


[gcode_macro _WIPE_LINE3]
description: Purge nozzle before print
variable_x_start = 0.0
variable_y_start = 150.0
variable_z_start =   2.0
variable_line0_length =  50.0
variable_line1_length =  50.0
variable_line2_length =  50.0
variable_line_width = 0.5
variable_line_height = 0.3
gcode:
    {% set line_width = line_width|float %}
    {% set line_height = line_height|float %}

    #extrusion calculation
    {% set fil_diam = printer.extruder.filament_diameter|default(1.75)|float %}
    {% set fil_sect = 3.1415 * ( fil_diam / 2.0)**2 %}  # mm^2 (mm^3 of filament per 1 mm of extrusion)
    {% set line_sect = line_width * line_height %}      # mm^2 (mm^3 of filament per 1 mm of line)
    {% set line_e_ratio = line_sect / fil_sect %}       # mm of extrusion per 1 mm of line

    {% set speed_line = 30*60|float %}
    {% set speed_move = 80*60|float %}

    {% set x_start = x_start|float %}
    {% set y_start = y_start|float %}
    {% set z_start = z_start|float %}
    
    #line0
    {% set line0_length = line0_length|float %}
    {% set line0_e = line0_length * line_e_ratio %}     # mm of filameent for line0
    #line1
    {% set line1_length = line1_length|float %}
    {% set line1_e = line1_length * line_e_ratio %}     # mm of filameent for line1
    #line2
    {% set line2_length = line2_length|float %}
    {% set line2_e = line2_length * line_e_ratio %}     # mm of filameent for line2

    # key points
    {% set p_prestart = 'X' ~ (x_start) ~                   "Y" ~ (y_start) ~                                                   "Z" ~ (z_start) %}
    {% set p_line0_st = 'X' ~ (x_start) ~                   "Y" ~ (y_start) ~                                                   "Z" ~ (z_start) %}
    {% set p_line0_en = 'X' ~ (x_start) ~                   "Y" ~ (y_start - line0_length) ~                                    "Z" ~ (line_height) %}
    {% set p_line1_st = 'X' ~ (x_start + line_width) ~      "Y" ~ (y_start - line0_length) ~                                    "Z" ~ (line_height) %}
    {% set p_line1_en = 'X' ~ (x_start + line_width) ~      "Y" ~ (y_start - line0_length - line1_length) ~                     "Z" ~ (line_height) %}
    {% set p_line2_st = 'X' ~ (x_start + line_width * 2) ~  "Y" ~ (y_start - line0_length - line1_length) ~                     "Z" ~ (line_height) %}
    {% set p_line2_en = 'X' ~ (x_start + line_width * 2) ~  "Y" ~ (y_start - line0_length - line1_length - line2_length) ~      "Z" ~ (line_height) %}

    {% if printer.toolhead.homed_axes != "xyz" %}
        {action_respond_info("Please home XYZ first")}
    {% elif printer.extruder.can_extrude != True %}
        {action_respond_info("Extruder temperature too low")}
    {% else %}
        _GPUSH
        G90                                             # Absolute positionning
        M83                                             # Relative extrusion

        G1 {p_prestart} F{speed_move}                   # Move to prestart position

        G1 {p_line0_st} F{speed_move}                   # Move to line0 start position
        G1 {p_line0_en} F{speed_move} E{line1_e}        # Draw the zero line

        G1 {p_line1_st} F{speed_move}                   # Move to line1 start position
        G1 {p_line1_en} F{speed_line} E{line1_e}        # Draw the first line
        
        G1 {p_line2_st} F{speed_move}                   # Move to line2 start position
        G1 {p_line2_en} F{speed_line} E{line2_e}        # Draw the second line

        G1 E-1 F{20*60}                                 #retract
        _GPOP
    {% endif %}
