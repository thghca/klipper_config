# buzzer imitation via speakers
#just for lulz and m300 tunes
#real audio files better

[gcode_macro TONE]
gcode:
    {% set duration_ms = ((params.DURATION|default(1)|int), 1)|max %}
    {% set duration_s = duration_ms / 1000.0 %}
    {% set frequency = params.FREQUENCY|default(260)|int %}
    RUN_SHELL_COMMAND CMD=play PARAMS="-n -q -r 48000 synth {duration_s} square {frequency} channels 2"
    #it works (sort of)
    #requres sox, pulseaudio (maybe not needed), whatewer pulseaudio lib for sox

    
[gcode_shell_command play]
command: sh /home/pi/printer_data/config/scripts/play.sh
timeout: 1.
verbose: False

[gcode_macro M300]
description: dummy sound command
gcode:
    {% set duration_ms = (params.P|default(1)|int, 0)|max %}
    {% set frequency = (params.S|default(260)|int, 0)|max %}
    
    {% if duration_ms > 0 %}
        TONE DURATION={duration_ms} FREQUENCY={frequency}
        G4 P{duration_ms}
    {% endif %}

#may be different for pulseaudio. todo later
# volume int % amixer get PCM|grep -o [0-9]*%|sed 's/%//'
# Increase volume by 5%
#amixer set PCM -- $[$(amixer get PCM|grep -o [0-9]*%|sed 's/%//')+5]%
# Decrease volume by 5%
#amixer set PCM -- $[$(amixer get PCM|grep -o [0-9]*%|sed 's/%//')-5]%
#set 
#amixer -M sset PCM 50%

[gcode_shell_command amixer]
command: amixer
timeout: 5.
verbose: True

[gcode_macro VOLUME]
gcode:
    {% if 'VALUE' in params %}
        {% set vol = ((params.VALUE|default(100)|float, 0)|max, 100)|min %}
        RUN_SHELL_COMMAND CMD=amixer PARAMS="-M sset PCM {vol}%"
    {% endif %}
